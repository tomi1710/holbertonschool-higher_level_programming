>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# matrix = [[1, 2, 3],[4, 5, 6]]

# input of standard matrix and div = integer
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# input of standard matrix and div = float
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 1.5))
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

# input of div = 'string'
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], "Hi"))
Traceback (most recent call last):
        ...
TypeError: div must be a number

# input of div = 0
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
Traceback (most recent call last):
        ...
ZeroDivisionError: division by zero

# change the matrix to not be symmetrical
>>> print(matrix_divided([[1, 2, 3], [4, 6]], 10))
Traceback (most recent call last):
        ...
TypeError: Each row of the matrix must have the same size

# test above asymmetrical matrix 
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 2))
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# change the matrix to be symmetrical, but has a string
>>> print(matrix_divided([[1, 'hi', 2], [5, 7, 8]], 2))
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix is None
>>> print(matrix_divided(None, 2))
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix includes True and False
>>> print(matrix_divided([[True, False], [1, 0]], 2))
[[0.5, 0.0], [0.5, 0.0]]

# no arguments
>>> print(matrix_divided())
Traceback (most recent call last):
        ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# extra args
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 2, "well hello there"))
Traceback (most recent call last):
        ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

# True is passed instead of matrix
>>> print(matrix_divided(True, 2))
Traceback (most recent call last):
        ...
TypeError: 'bool' object is not iterable